var ChatRoom=angular.module("ChatRoom",["ngRoute"]);ChatRoom.config(["$routeProvider",function(a){a.when("/login",{templateUrl:"views/login.html",controller:"LoginController"}).when("/rooms/:user",{templateUrl:"views/rooms.html",controller:"RoomsController"}).when("/rooms/:user/:room",{templateUrl:"views/room.html",controller:"RoomController"}).otherwise({redirectTo:"/login"})}]),ChatRoom.controller("LoginController",function(a,b,c,d,e){a.errorMessage="",a.nickname="",a.login=function(){""===a.nickname?a.errorMessage="Please choose a nickname before continuing!":e.emit("adduser",a.nickname,function(c){c?b.path("/rooms/"+a.nickname):a.errorMessage="This nickname is already taken!"})}}),ChatRoom.controller("RoomController",function(a,b,c,d,e){a.currentRoom=d.room,a.currentUser=d.user,a.users=[],a.ops=[],a.messageHistory=[],a.nextMessage="",a.errorMessage="",a.isOp=!1,a.userToKick="",a.partRoom=function(){b.path("/rooms/"+a.currentUser),e.emit("partroom",a.currentRoom)},a.sendMsg=function(){if(""!==a.nextMessage){var b={roomName:a.currentRoom,msg:a.nextMessage};e.emit("sendmsg",b),$("#msg").val(""),a.nextMessage=""}},a.kickUser=function(b){var c={user:b,room:a.currentRoom};e.emit("kick",c,function(b){b||(a.errorMessage="Could not kick user")})},a.banUser=function(b){var c={user:b,room:a.currentRoom};e.emit("ban",c,function(c){c||(a.errorMessage="Coult not ban "+b)})},e.on("banned",function(c,d){console.log("socket on"),a.currentRoom===c&&a.currentUser===d&&b.path("/rooms/"+a.currentUser)}),e.on("kicked",function(c,d){a.currentRoom===c&&a.currentUser===d&&b.path("/rooms/"+a.currentUser)}),e.on("updateusers",function(b,c,d){if(b===a.currentRoom){a.users=[],a.ops=[];for(var e in d)a.ops.push(e);for(var f in c){for(var g=!1,h=0;h<a.ops.length;h++)f===a.ops[h]&&(g=!0);g||a.users.push(f)}for(var i=0;i<a.ops.length;i++)a.currentUser==a.ops[i]&&(a.isOp=!0)}}),e.on("updatechat",function(b,c){b===a.currentRoom&&(a.messageHistory=c)})}),ChatRoom.controller("RoomsController",function(a,b,c,d,e){a.rooms=[],a.roomList=[],a.currentUser=d.user,a.errorMessage="",a.successMessage="",a.roomName="",e.emit("rooms"),e.on("roomlist",function(b){a.roomList=[];for(var c in b)a.roomList.push(c)}),a.enterRoom=function(c){var d={room:c};e.emit("joinroom",d,function(d,e){d?(console.log("room: "+c+" user: "+a.currentUser),b.path("/rooms/"+a.currentUser+"/"+c)):a.errorMessage=e})},a.createRoom=function(){for(var c={room:a.roomName},d=!1,f=0;f<a.roomList.length;f++)c.room===a.roomList[f]&&(d=!0);d?a.errorMessage="Room name already exists":""!==a.roomName?e.emit("joinroom",c,function(d,e){d?b.path("/rooms/"+a.currentUser+"/"+c.room):a.errorMessage=e}):a.errorMessage="Room name cannot be empty"}}),ChatRoom.factory("socket",function(a){var b=io.connect("http://localhost:8080");return{on:function(c,d){b.on(c,function(){var c=arguments;a.$apply(function(){d.apply(b,c)})})},emit:function(c,d,e){b.emit(c,d,function(){var c=arguments;a.$apply(function(){e&&e.apply(b,c)})})}}});